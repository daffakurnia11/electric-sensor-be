// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sensor {
  id                String   @id @default(uuid()) @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @updatedAt @db.Timestamptz(6)
  deleted_at        DateTime? @db.Timestamptz(6) // Nullable
  name              String   @db.Text
  voltage           Float    
  current           Float    
  power             Float    
  power_factor      Float    
  frequency         Float    
  energy            Float    
  apparent_power    Float    
  reactive_power    Float   

  @@map("sensor_electrics")
}

model SensorPrediction {
  id                String   @id @default(uuid()) @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  updated_at        DateTime @updatedAt @db.Timestamptz(6)
  deleted_at        DateTime? @db.Timestamptz(6)
  name              String   @db.Text
  prediction_date   DateTime @db.Timestamptz(6) 
  prediction_power  Float
  power             PowerPrediction[]

  @@map("sensor_predictions")
  @@index([name])
  @@index([prediction_date])
}

model PowerPrediction {
  id                    String   @id @default(uuid()) @db.Uuid
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @updatedAt @db.Timestamptz(6)
  deleted_at            DateTime? @db.Timestamptz(6)
  sensor_prediction     SensorPrediction @relation(fields: [sensor_prediction_id], references: [id], onDelete: Cascade)
  sensor_prediction_id  String   @db.Uuid
  power                 Float

  @@map("power_predictions")
  @@index([sensor_prediction_id])
}